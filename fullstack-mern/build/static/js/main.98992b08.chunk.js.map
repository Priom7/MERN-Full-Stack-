{"version":3,"sources":["utils/validator.js","task1_form/FormElements/Input.js","hooks/form-hook.js","hooks/http-hook.js","task1_form/FormElements/Button.js","task1_form/FormElements/ImageUpload.js","task1_form/FormElements/DropDown.js","task1_form/FormElements/CheckBox.js","LoadingDataComponent/Loading.js","LoadingDataComponent/ErrorData.js","task1_form/NewPlace.js","task1_form/UpdatePlace.js","task2_table/Table.js","task2_table/Pagination/Pagination.js","task2_table/Data/Data.js","NavBar/Navbar.js","task3_imageDrop/Gallery.js","task3_imageDrop/DropImage.js","App.js","index.js"],"names":["VALIDATOR_MINLENGTH","val","type","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandeler","event","target","touchHandeler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","useState","isLoading","setIsLoading","isError","setIsError","activeHttpRequests","useRef","sendRequest","url","a","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","requestController","ok","Error","message","forEach","abortController","abort","clearError","Button","href","size","inverse","danger","children","to","exact","onClick","disabled","ImageUpload","file","setFile","previewUrl","setPreviewUrl","filePickerRef","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","DropDown","setValue","CheckBox","setState","recommended","setIsRecommended","name","checked","Loading","ErrorData","errorMessage","NewPlace","title","description","choice","check","image","inputHandler","createHistory","useHistory","placeSubmitHandler","preventDefault","formData","FormData","append","process","console","log","onSubmit","UpdatePlace","loadedPlace","setLoadedPlace","placeId","useParams","placeUpdateHistory","setFormData","place","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Fragment","Table","places","loading","map","key","Pagination","placesPerPage","totalPlaces","paginate","pageNumbers","i","Math","ceil","num","Data","loadedPlaces","setLoadedPlaces","currentPage","setCurrentPage","placePerPage","fetchPlaces","indexOfLastPlace","indexOfFirstPlace","currentPlaces","slice","pageNumber","Navbar","Gallery","uploaded","images","setImages","galleries","fetchImages","DropImage","setFiles","setUploaded","useDropzone","maxSize","maxFiles","multiple","onDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","fileRejectionItems","fileRejections","errors","path","e","code","width","App","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98992b08.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({\r\n  type: VALIDATOR_TYPE_REQUIRE,\r\n});\r\nexport const VALIDATOR_FILE = () => ({\r\n  type: VALIDATOR_TYPE_FILE,\r\n});\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({\r\n  type: VALIDATOR_TYPE_MIN,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAX = (val) => ({\r\n  type: VALIDATOR_TYPE_MAX,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_EMAIL = () => ({\r\n  type: VALIDATOR_TYPE_EMAIL,\r\n});\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid =\r\n        isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid =\r\n        isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../utils/validator\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        //copies old states and all key value pairs and updates\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        //copies old states and all key value pairs and updates\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  //more complex state updating logic\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isValid: props.initialValid || false,\n    isTouched: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n  //runs whenever  changes\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandeler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandeler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandeler}\n        onBlur={touchHandeler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandeler}\n        onBlur={touchHandeler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid &&\n        inputState.isTouched &&\n        \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && (\n        <p>{props.errorText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid =\n            formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid,\n          },\n        },\n\n        isValid: formIsValid,\n      };\n\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (\n  initialInputs,\n  initialFormValidity\n) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback(\n    (inputData, formValidity) => {\n      dispatch({\n        type: \"SET_DATA\",\n        inputs: inputData,\n        formIsValid: formValidity,\n      });\n    },\n    []\n  );\n\n  return [formState, inputHandler, setFormData];\n};\n","import {\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = {}\n    ) => {\n      setIsLoading(true);\n\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (requestController) =>\n            requestController !== httpAbortController\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setIsError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setIsError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(\n        (abortController) => abortController.abort()\n      );\n    };\n  }, []);\n  return { isLoading, isError, sendRequest, clearError };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${\n          props.size || \"default\"\n        } ${props.inverse && \"button--inverse\"} ${\n          props.danger && \"button--danger\"\n        }`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${\n          props.size || \"default\"\n        } ${props.inverse && \"button--inverse\"} ${\n          props.danger && \"button--danger\"\n        }`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${\n        props.size || \"default\"\n      } ${props.inverse && \"button--inverse\"} ${\n        props.danger && \"button--danger\"\n      }`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const filePickerRef = useRef();\n  const [isValid, setIsValid] = useState();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (\n      event.target.files &&\n      event.target.files.length === 1\n    ) {\n      pickedFile = event.target.files[0];\n      if (\n        (pickedFile.type === \"image/png\" ||\n          \"image/jpg\" ||\n          \"image/jpeg\") &&\n        pickedFile.size <= 500000\n      ) {\n        setFile(pickedFile);\n        setIsValid(true);\n        fileIsValid = true;\n      }\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className='form-control'>\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type='file'\n        accept='.jpg, .png, .jpeg'\n        onChange={pickedHandler}\n      ></input>\n      <div\n        className={`image-upload ${\n          props.center && \"center\"\n        }`}\n      >\n        <div className='image-upload__preview'>\n          {previewUrl && (\n            <img src={previewUrl} alt='Preview'></img>\n          )}\n          {!previewUrl && (\n            <p>\n              Please pick an image. (size below 500000bytes)\n            </p>\n          )}\n        </div>\n        <Button type='button' onClick={pickImageHandler}>\n          Pick Image\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState } from \"react\";\r\nimport \"./DropDown.css\";\r\nconst DropDown = (props) => {\r\n  const [value, setValue] = useState(\"Dhaka\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    props.onInput(props.id, event.target.value, true);\r\n  };\r\n\r\n  return (\r\n    <div className='selector'>\r\n      <label className='selector__title'>\r\n        {props.label}:\r\n        <select\r\n          className='selector__select'\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          <option value='Dhaka'>Dhaka</option>\r\n          <option value='Chittagong'>Chittagong</option>\r\n          <option value='Barishal '>Barishal </option>\r\n          <option value='Mymensingh'>Mymensingh</option>\r\n          <option value='Khulna'>Khulna</option>\r\n          <option value='Rajshahi '>Rajshahi </option>\r\n          <option value='Rangpur'>Rangpur</option>\r\n          <option value='Sylhet'>Sylhet</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nconst CheckBox = (props) => {\r\n  const [state, setState] = useState(false);\r\n  const [recommended, setIsRecommended] = useState(\r\n    \"Visited\"\r\n  );\r\n\r\n  const handleChange = ({ target }) => {\r\n    setState(target?.checked);\r\n    if (!target?.checked) {\r\n      setIsRecommended(\"Visited\");\r\n    } else {\r\n      setIsRecommended(\"Not Visited\");\r\n    }\r\n    props.onInput(props.id, recommended, true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.label} :{\" \"}\r\n      <input\r\n        name='check'\r\n        type='checkbox'\r\n        checked={state}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CheckBox;\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <span> Loading Data Please Wait....</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nfunction ErrorData({ errorMessage }) {\r\n  return (\r\n    <div>\r\n      <span>Error : {errorMessage}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorData;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Input from \"./FormElements/Input\";\nimport { useForm } from \"../hooks/form-hook\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../utils/validator.js\";\nimport { useHttpClient } from \"../hooks/http-hook\";\nimport ImageUpload from \"./FormElements/ImageUpload\";\nimport DropDown from \"./FormElements/DropDown\";\nimport CheckBox from \"./FormElements/CheckBox\";\nimport Button from \"./FormElements/Button\";\nimport \"./NewPlace.css\";\nimport Loading from \"../LoadingDataComponent/Loading\";\nimport ErrorData from \"../LoadingDataComponent/ErrorData\";\nconst NewPlace = () => {\n  const {\n    isLoading,\n    isError,\n    clearError,\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n\n      choice: {\n        value: \"Dhaka\",\n        isValid: true,\n      },\n      check: {\n        value: \"Not Visited\",\n        isValid: true,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const createHistory = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    // send data to\n\n    try {\n      let formData = new FormData();\n      formData.append(\n        \"title\",\n        formState.inputs.title.value\n      );\n      formData.append(\n        \"description\",\n        formState.inputs.description.value\n      );\n      formData.append(\n        \"check\",\n        formState.inputs.check.value\n      );\n      formData.append(\n        \"choice\",\n        formState.inputs.choice.value\n      );\n      formData.append(\n        \"image\",\n        formState.inputs.image.value\n      );\n\n      let response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n      console.log(response);\n      createHistory.push(\"/table\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      {isLoading && <Loading></Loading>}\n      {isError && (\n        <ErrorData\n          onClick={clearError}\n          errorMessage={isError}\n        ></ErrorData>\n      )}\n      <form\n        className='place-form'\n        onSubmit={placeSubmitHandler}\n        id='form'\n      >\n        <Input\n          id='title'\n          name='title'\n          element='input'\n          type='text'\n          label='Place Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please Enter a valid Title. (Required)'\n          onInput={inputHandler}\n        ></Input>\n\n        <Input\n          id='description'\n          name='description'\n          element='textarea'\n          type='text'\n          label='Place Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please Enter a valid description (at lest 5 characters).'\n          onInput={inputHandler}\n        ></Input>\n\n        <DropDown\n          name='choice'\n          id='choice'\n          label='Division'\n          onInput={inputHandler}\n        ></DropDown>\n\n        <CheckBox\n          name='check'\n          id='check'\n          label='Visited'\n          onInput={inputHandler}\n        ></CheckBox>\n\n        <ImageUpload\n          center\n          name='image'\n          id='image'\n          onInput={inputHandler}\n          errorText='Please provide an image...'\n        ></ImageUpload>\n\n        <Button type='submit' disabled={!formState.isValid}>\n          Add Place\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Input from \"../task1_form/FormElements/Input\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../utils/validator.js\";\r\nimport Button from \"../task1_form/FormElements/Button\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport DropDown from \"../task1_form/FormElements/DropDown\";\r\nimport CheckBox from \"../task1_form/FormElements/CheckBox\";\r\nimport Loading from \"../LoadingDataComponent/Loading\";\r\nimport ErrorData from \"../LoadingDataComponent/ErrorData\";\r\n\r\nconst UpdatePlace = () => {\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    sendRequest,\r\n    clearError,\r\n  } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const placeUpdateHistory = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n\r\n      choice: {\r\n        value: \"Dhaka\",\r\n        isValid: true,\r\n      },\r\n      check: {\r\n        value: \"Not Visited\",\r\n        isValid: true,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n            check: {\r\n              value: responseData.place.check,\r\n              isValid: true,\r\n            },\r\n            choice: {\r\n              value: responseData.place.choice,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n          check: formState.inputs.check.value,\r\n          choice: formState.inputs.choice.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      placeUpdateHistory.push(\"/table\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loading></Loading>}\r\n      {isError && (\r\n        <ErrorData\r\n          onClick={clearError}\r\n          errorMessage={isError}\r\n        ></ErrorData>\r\n      )}\r\n      {!isLoading && loadedPlace && (\r\n        <form\r\n          className='place-form'\r\n          onSubmit={placeUpdateSubmitHandler}\r\n        >\r\n          <Input\r\n            id='title'\r\n            element='input'\r\n            type='text'\r\n            label='Title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText='Please Enter a valid Title.'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          ></Input>\r\n\r\n          <Input\r\n            id='description'\r\n            element='textarea'\r\n            type='text'\r\n            label='Description'\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText='Please Enter a valid description (at lest 5 characters).'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          ></Input>\r\n\r\n          <DropDown\r\n            name='choice'\r\n            id='choice'\r\n            label='Division'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.choice}\r\n            initialValid={true}\r\n          ></DropDown>\r\n\r\n          <CheckBox\r\n            name='check'\r\n            id='check'\r\n            label='Visited'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.check}\r\n            initialValid={true}\r\n          ></CheckBox>\r\n\r\n          <Button\r\n            type='submit'\r\n            disabled={!formState.isValid}\r\n          >\r\n            Update Place\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport Button from \"../task1_form/FormElements/Button\";\r\nconst Table = ({ places, loading }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span>Loading....</span>}\r\n      {!loading && places && (\r\n        <div className='table'>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Image</td>\r\n                <td>ID</td>\r\n                <td>Title</td>\r\n                <td>Description</td>\r\n                <td>Visited</td>\r\n                <td>Division</td>\r\n                <td>Update</td>\r\n              </tr>\r\n              {places.map((place) => (\r\n                <tr key={place.id} className='table__col'>\r\n                  <td className='table__row'>\r\n                    <img\r\n                      key={place.id}\r\n                      alt='item'\r\n                      className='table__image'\r\n                      src={`${process.env.REACT_APP_ASSET_URL}/${place.image}`}\r\n                    ></img>\r\n                  </td>\r\n                  <td>{place.id}</td>\r\n                  <td>{place.title}</td>\r\n                  <td>{place.description}</td>\r\n                  <td>{place.check}</td>\r\n                  <td>{place.choice}</td>\r\n                  <td>\r\n                    <Button to={`/places/${place.id}`}>\r\n                      EDIT\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\nimport Button from \"../../task1_form/FormElements/Button\";\r\nconst Pagination = ({\r\n  placesPerPage,\r\n  totalPlaces,\r\n  paginate,\r\n}) => {\r\n  const pageNumbers = [];\r\n\r\n  for (\r\n    let i = 1;\r\n    i <= Math.ceil(totalPlaces / placesPerPage);\r\n    i++\r\n  ) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav className='pagination'>\r\n      <ul className='pagination__ul'>\r\n        {pageNumbers.map((num) => (\r\n          <li key={num} className='pagination__item'>\r\n            <Button\r\n              onClick={() => paginate(num)}\r\n              className='pagination__link'\r\n            >\r\n              {num}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport Table from \"../Table\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Loading from \"../../LoadingDataComponent/Loading\";\r\nimport ErrorData from \"../../LoadingDataComponent/ErrorData\";\r\n\r\nfunction Data() {\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [placePerPage] = useState(5);\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    sendRequest,\r\n    clearError,\r\n  } = useHttpClient();\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places`\r\n        );\r\n\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest]);\r\n\r\n  if (!isLoading && loadedPlaces) {\r\n    const indexOfLastPlace = currentPage * placePerPage;\r\n    const indexOfFirstPlace =\r\n      indexOfLastPlace - placePerPage;\r\n    var currentPlaces = loadedPlaces.slice(\r\n      indexOfFirstPlace,\r\n      indexOfLastPlace\r\n    );\r\n  }\r\n\r\n  //Change page\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  return (\r\n    <div>\r\n      {loadedPlaces.length === 0 && (\r\n        <span>No Data Available</span>\r\n      )}\r\n      {isLoading && <Loading></Loading>}\r\n      {isError && (\r\n        <ErrorData\r\n          onClick={clearError}\r\n          errorMessage={isError}\r\n        ></ErrorData>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <>\r\n          <Pagination\r\n            placesPerPage={placePerPage}\r\n            totalPlaces={loadedPlaces.length}\r\n            paginate={paginate}\r\n          ></Pagination>\r\n\r\n          <Table\r\n            places={currentPlaces}\r\n            loading={isLoading}\r\n          ></Table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React from \"react\";\r\nimport Button from \"../task1_form/FormElements/Button\";\r\nimport \"./Navbar.css\";\r\nfunction Navbar() {\r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar__options'>\r\n        <Button to='/'>Task 1</Button>\r\n        <Button to='/table'>Task 2</Button>\r\n        <Button to='/drop'>Task 3</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport \"./Gallery.css\";\r\nfunction Gallery({ uploaded }) {\r\n  const [images, setImages] = useState([]);\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    sendRequest,\r\n    clearError,\r\n  } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/galleries`\r\n        );\r\n\r\n        setImages(responseData.galleries);\r\n      } catch (err) {}\r\n    };\r\n    fetchImages();\r\n  }, [sendRequest, uploaded]);\r\n\r\n  return (\r\n    <div className='gallery'>\r\n      {isLoading && (\r\n        <span>Loading Data please wait...</span>\r\n      )}\r\n      {isError && (\r\n        <span onClick={clearError}>Error : {isError}</span>\r\n      )}\r\n      {!isLoading &&\r\n        images &&\r\n        images.map((image) => (\r\n          <img\r\n            alt='item'\r\n            className='gallery__images'\r\n            key={image.id}\r\n            src={`${process.env.REACT_APP_ASSET_URL}/${image.image}`}\r\n          ></img>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./DropImage.css\";\r\nimport Gallery from \"./Gallery\";\r\nconst DropImage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [uploaded, setUploaded] = useState(false);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    fileRejections,\r\n  } = useDropzone({\r\n    maxSize: 500000,\r\n    maxFiles: 1,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n    onDrop: async (acceptedFiles) => {\r\n      // Can be modified if multiple files needed to be uploaded at the same time\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n      try {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", acceptedFiles[0]);\r\n\r\n        await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/galleries`,\r\n          {\r\n            method: \"POST\",\r\n            body: formData,\r\n          }\r\n        );\r\n        setUploaded(true);\r\n        setFiles([]);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n  });\r\n\r\n  const fileRejectionItems = fileRejections.map(\r\n    ({ file, errors }) => (\r\n      <li key={file.path}>\r\n        {file.path} - {file.size} bytes\r\n        <ul>\r\n          {errors.map((e) => (\r\n            <li key={e.code}>{e.message}</li>\r\n          ))}\r\n        </ul>\r\n      </li>\r\n    )\r\n  );\r\n\r\n  const images = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <h4>File Name : </h4>\r\n        <span>{file.name}</span>\r\n        <h4>File Size : </h4>\r\n        <span>{file.size}</span>\r\n        <h4>File Type : </h4>\r\n        <span>{file.type}</span>\r\n      </div>\r\n\r\n      <div>\r\n        <img\r\n          src={file.preview}\r\n          style={{ width: \"200px\" }}\r\n          alt='preview'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className='dropImage'>\r\n      <div className='dropImage__limitation'>\r\n        <ul>\r\n          Expected File Type:\r\n          <li>image.png</li>\r\n          <li>image.jpg</li>\r\n          <li>image.jpeg</li>\r\n        </ul>\r\n        <ul>\r\n          Expected File Limit:\r\n          <li>Size : 500000bytes / 500Kb</li>\r\n          <li>Number of File : 1</li>\r\n        </ul>\r\n      </div>\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <p className='dropImage__title'>Drop files here</p>\r\n      </div>\r\n      <div>{images}</div>\r\n      <div className='rejectStyle'>\r\n        <ul>{fileRejectionItems}</ul>\r\n      </div>\r\n      <h1>Image Gallery</h1>\r\n      <Gallery uploaded={uploaded}></Gallery>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropImage;\r\n","import React from \"react\";\nimport NewPlace from \"./task1_form/NewPlace\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport UpdatePlace from \"./task1_form/UpdatePlace\";\nimport Data from \"./task2_table/Data/Data\";\nimport Navbar from \"./NavBar/Navbar\";\n\nimport DropImage from \"./task3_imageDrop/DropImage\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div className='app'>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            component={NewPlace}\n          ></Route>\n          <Route path='/table' component={Data}></Route>\n          <Route\n            path='/places/:placeId'\n            component={UpdatePlace}\n          ></Route>\n\n          <Route path='/drop' component={DropImage}></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}